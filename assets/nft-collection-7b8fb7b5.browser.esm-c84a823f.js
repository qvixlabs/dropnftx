var d=Object.defineProperty;var g=(s,a,t)=>a in s?d(s,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[a]=t;var e=(s,a,t)=>(g(s,typeof a!="symbol"?a+"":a,t),t);import{N as l,q as W,A as C,r as f,a9 as w,s as y,u as T,G as R,t as E,v as S,x as b,y as c,T as A}from"./index-e9dc9249.js";import{C as B}from"./contract-interceptor-d7b164a7.browser.esm-7eabd2ea.js";import{C as v,a as M}from"./contract-owner-d0899d6f.browser.esm-ce16f7a5.js";import{C as O}from"./contract-platform-fee-bb93a8e4.browser.esm-9f10d6fb.js";import{C as x}from"./contract-roles-246fe733.browser.esm-f70935f6.js";import{C as I}from"./contract-sales-e8c058ab.browser.esm-9152f0f9.js";import{S as P}from"./erc-721-standard-64a89512.browser.esm-bb591b5d.js";import{E as k}from"./erc-721-74018339.browser.esm-f1040976.js";import"./QueryParams-57e79923.browser.esm-1bed8f71.js";import"./drop-claim-conditions-6965683b.browser.esm-60b58f54.js";import"./index-7c8c5a15.js";const o=class o extends P{constructor(t,r,n){let h=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},i=arguments.length>4?arguments[4]:void 0,m=arguments.length>5?arguments[5]:void 0,u=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new W(t,r,i,h,n);super(u,n,m);e(this,"mint",c(async t=>this.erc721.mint.prepare(t)));e(this,"mintTo",c(async(t,r)=>this.erc721.mintTo.prepare(t,r)));e(this,"mintBatch",c(async t=>this.erc721.mintBatch.prepare(t)));e(this,"mintBatchTo",c(async(t,r)=>this.erc721.mintBatchTo.prepare(t,r)));e(this,"burn",c(t=>this.erc721.burn.prepare(t)));this.abi=C.parse(i||[]),this.metadata=new f(this.contractWrapper,w,this.storage),this.app=new y(this.contractWrapper,this.metadata,this.storage),this.roles=new x(this.contractWrapper,o.contractRoles),this.royalties=new v(this.contractWrapper,this.metadata),this.sales=new I(this.contractWrapper),this.encoder=new T(this.contractWrapper),this.estimator=new R(this.contractWrapper),this.events=new E(this.contractWrapper),this.platformFees=new O(this.contractWrapper),this.interceptor=new B(this.contractWrapper),this.signature=new k(this.contractWrapper,this.storage),this.owner=new M(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async isTransferRestricted(){return!await this.contractWrapper.read("hasRole",[S("transfer"),b])}async getMintTransaction(t,r){return this.erc721.getMintTransaction(t,r)}async prepare(t,r,n){return A.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:n})}async call(t,r,n){return this.contractWrapper.call(t,r,n)}};e(o,"contractRoles",l);let p=o;export{p as NFTCollection};
